openapi: 3.1.0
info:
  version: 1
  title: test for types
servers:
  - url: 'http://localhost:3000'
paths:
  /user:
    post:
      summary: 'Sample endpoint: Returns details about a particular user'
      operationId: listUser
      tags:
        - user
      parameters:
        - name: id
          in: query
          description: ID of the user
          required: true
          schema:
            type:
              - integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type:
                - object
              properties:
                data:
                  type:
                    - array
                  items:
                    $ref: '#/components/schemas/Entity'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
components:
  schemas:
    Entity:
      type:
        - object
      title: Entity
      description: A single and unique entity linked to a user
      properties:
        entityId:
          type:
            - string
        user:
          type: object
          properties:
            id:
              type: integer
              format: int64
            age:
              type:  integer
              format: int32
            created_at:
              type: string
              format: date-time
        isFavorite:
          type:  integer
          format: int32
        needThis:
          type:
            - string
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        created_at:
          type: string
          format: date-time
        birthday:
          type: string
          format: date
        floatField:
          type: number
          format: float
        doubleField:
          type: number
          format: double
        content:
          format: byte
          type: string
        file:
          type: string
          format: binary
        root_pass:
          type: string
          format: password
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
